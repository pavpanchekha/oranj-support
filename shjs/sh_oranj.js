
if (! this.sh_languages) {
  this.sh_languages = {};
}

sh_languages['oranj'] = [
  [
    [
      /#/g,
      'sh_comment',
      1
    ],
    [
      /\.|\/|\+|-|\*|\||\^|(\+|\-|\^|\/|\/\/|\*|<<|>>)\=|=<|=>|(?:<|>|!|=)==/g,
      'sh_symbol',
      -1
    ],
    [
      /\b(?:true|false|nil|inf|self|block|runtime|catch|class|else|elif|finally|for|fn|yield|if|return|throw|try|while|with|del|extern|import|break|continue|assert|as)\b/g,
      'sh_keyword',
      -1
    ],
    [
      /\b((is\s+not\b)|aint|mod|and|or|not|in|is)\b/g,
      'sh_keyword',
      -1
    ],
    [
      /(?:(?:(?:[ \t]*[0-9])+\.(?:[ \t]*[0-9])+)|(?:\.(?:[ \t]*[0-9])+)|(?:(?:[ \t]*[0-9])+\.))(?:(?:[eE][+-]?(?:[ \t]*[0-9])*)?)|(?:0\w)(?:(?:[ \t]*[0-9a-zA-Z])+)(?![ \t]*\.|\d|\w)|(?:(?:[0-9\s])+)/g,
      'sh_number',
      -1
    ],
    [
      /#!/g,
      'sh_preproc',
      1
    ],
    [
      /\#\!.*\{/g,
      'sh_preproc',
      2
    ],
    [
      /`[a-zA-Z0-9\$_]+/g,
      'sh_string',
      -1
    ],
    [
      /'''/g,
      'sh_string',
      3
    ],
    [
      /"""/g,
      'sh_string',
      4
    ],
    [
      /'/g,
      'sh_string',
      5
    ],
    [
      /"/g,
      'sh_string',
      6
    ]
  ],
  [
    [
      /$/g,
      null,
      -2
    ]
  ],
  [
    [
      /\#\!\w*\}/g,
      'sh_preproc',
      -2
    ]
  ],
  [
    [
      /\\(?:\\|''')/g,
      null,
      -1
    ],
    [
      /'''/g,
      'sh_string',
      -2
    ]
  ],
  [
    [
      /\\(?:\\|""")/g,
      null,
      -1
    ],
    [
      /"""/g,
      'sh_string',
      -2
    ]
  ],
  [
    [
      /$/g,
      null,
      -2
    ],
    [
      /\\(?:\\|')/g,
      null,
      -1
    ],
    [
      /'/g,
      'sh_string',
      -2
    ]
  ],
  [
    [
      /$/g,
      null,
      -2
    ],
    [
      /\\(?:\\|")/g,
      null,
      -1
    ],
    [
      /"/g,
      'sh_string',
      -2
    ]
  ]
];
